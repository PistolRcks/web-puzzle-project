// Other UserPuzzle relationship routes will be placed here.
// Eventually, the `time` metadata might be set here as well.
const { db } = require("../db");

/**
 * The callback function for the /api/userPuzzleMeta POST route.
 * Sets the value of the completion of a puzzle (i.e. UserPuzzle.progress).
 *
 * @param {Express.Request} req - The Request object generated by the route.
 *      Should contain the following keys:
 *          - `progress` - The decimal representation of the binary number defining the progress of the puzzle.
 *              For now, the number will be `0` for an incomplete puzzle and `1` for a complete puzzle.
 *          - `puzzle_id` - The `puzzle_id` value of the Puzzle with which to update the UserPuzzle relation.
 *          - `time` - The integer time (in milliseconds) in which the user finished the puzzle.
 * @param {Express.Response} res - The Result object generated by the route.
 * @param {Function} next - The next() function used in the callback.
 */
function setUserPuzzleMeta(req, res, next) {
  // safety net
  if (
    !("progress" in req.body && "puzzle_id" in req.body && "time" in req.body)
  ) {
    res
      .status(400)
      .send(
        `Error: Malformed input - required key "progress", "puzzle_id", or "time" not found in request body.`
      );
    return;
  }

  // get the data we need; we should already be authorized so there should already be a session
  const { progress, puzzle_id: puzzleID, time } = req.body;
  const { userID } = req.session;

  // check that the specific UserPuzzle exists
  db.get(
    "SELECT * FROM UserPuzzle WHERE user_id = ? AND puzzle_id = ?",
    [userID, puzzleID],
    function (err, row) {
      if (err) {
        res.status(500).send(err);
        return;
      }

      if (!row) {
        res
          .status(400)
          .send(
            `Error: UserPuzzle relation does not exist for user_id ${userID} and puzzle_id ${puzzleID}.`
          );
        return;
      } else {
        // update the value in the database
        db.run(
          "UPDATE UserPuzzle SET progress = ?, time = ? WHERE user_id = ? AND puzzle_id = ?",
          [progress, time, userID, puzzleID],
          function (err) {
            // throw errors if there's an issue
            if (err) {
              res.status(500).send(err);
              return;
            }

            // if it's done then we're fine!
            res
              .status(200)
              .send(
                `Metadata between user_id ${userID} and puzzle_id ${puzzleID} successfully updated.`
              );
          }
        );
      }
    }
  );
}

module.exports = { setUserPuzzleMeta };
