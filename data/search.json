{"list":[{"title":"Error401","link":"<a href=\"global.html#Error401\">Error401</a>"},{"title":"Error404","link":"<a href=\"global.html#Error404\">Error404</a>"},{"title":"fetchWordsFromAPI","link":"<a href=\"global.html#fetchWordsFromAPI\">fetchWordsFromAPI</a>","description":"<p>Fetches an Array containing Arrays of words based on the <code>requirements</code> Array from the API.\nNB: Please do not spam this! The rate limiting might be harsh!</p>"},{"title":"googleLogin","link":"<a href=\"global.html#googleLogin\">googleLogin</a>","description":"<p>The callback function for the /api/googleLogin POST route. Signs up a user into the database.</p>\n<p>The <code>req</code> parameter should contain <code>username</code> in its body.</p>"},{"title":"initDatabase","link":"<a href=\"global.html#initDatabase\">initDatabase</a>","description":"<p>Creates or initializes the database, if it is not already done.</p>"},{"title":"initDatabase","link":"<a href=\"global.html#initDatabase\">initDatabase</a>","description":"<p>Creates or initializes the database, if it is not already done.</p>"},{"title":"insertGoogleUser","link":"<a href=\"global.html#insertGoogleUser\">insertGoogleUser</a>","description":"<p>Inserts a new User into the database <code>db</code>. Calls a callback on the new user object afterwards.</p>"},{"title":"insertUser","link":"<a href=\"global.html#insertUser\">insertUser</a>","description":"<p>Inserts a new User into the database <code>db</code>. Calls a callback on the new user object afterwards.</p>"},{"title":"listPuzzles","link":"<a href=\"global.html#listPuzzles\">listPuzzles</a>","description":"<p>The callback function for the /api/listPuzzles GET route.</p>\n<p>The <code>res</code> parameter should return an array of JSON objects containing puzzle data.</p>"},{"title":"logout","link":"<a href=\"global.html#logout\">logout</a>","description":"<p>The callback function for the authorized /api/logout POST route. Logs out a user.</p>\n<p>Under the hood, this calls req.session.destroy().</p>"},{"title":"logRouteAndCheckAuthorization","link":"<a href=\"global.html#logRouteAndCheckAuthorization\">logRouteAndCheckAuthorization</a>","description":"<p>This function checks whether or not {req/path} is an excepted path.</p>\n<ul>\n<li>If it is, the function moves onto the next middleware.</li>\n<li>If it is not, then it checks if the request has a sessionID, which corresponds to the user having logged in.\n<ul>\n<li>If no sessionID is found on the request, then the user has not logged in, and the middleware returns a 401 status.</li>\n</ul>\n</li>\n</ul>"},{"title":"randomWord","link":"<a href=\"global.html#randomWord\">randomWord</a>","description":"<p>Serves as the callback for the GET /api/word route. Gets an Array containing Arrays containing words.\nThe JSON body should have one key-value pair at the root called &quot;words&quot; which contains the Array of requirement Objects, e.g.:</p>\n<pre class=\"prettyprint source lang-json\"><code>{\n   &quot;words&quot; : [\n     {\n       put in requirement 1 here...\n     },\n     {\n       put in requirement 2 here...\n     }\n   ]\n}\n</code></pre>"},{"title":"redirectBundleManifest","link":"<a href=\"global.html#redirectBundleManifest\">redirectBundleManifest</a>","description":"<p>This middleware functions allows us to redirect any api request to a file like bundle.js back to the original /bundle.js.\nWhen we don't redirect these files back to their base route,\nserver side errors are thrown due to the server trying to find the /Puzzle/Selection/bundle.js route, etc. upon page refresh.</p>"},{"title":"setUserPuzzleMeta","link":"<a href=\"global.html#setUserPuzzleMeta\">setUserPuzzleMeta</a>","description":"<p>The callback function for the /api/userPuzzleMeta POST route.\nSets the value of the completion of a puzzle (i.e. User_Puzzle.progress).</p>"},{"title":"signup","link":"<a href=\"global.html#signup\">signup</a>","description":"<p>The callback function for the /api/signup POST route. Signs up a user into the database.</p>\n<p>The <code>req</code> parameter should contain both <code>username</code> and <code>password</code> in its body.</p>"},{"title":"Verify","link":"<a href=\"global.html#Verify\">Verify</a>"},{"title":"verifySession","link":"<a href=\"global.html#verifySession\">verifySession</a>","description":"<p>Makes an API call to '/api/verify' to authenticate the session. If the session does not exist or is invalid, an error will be thrown.</p>"}]}